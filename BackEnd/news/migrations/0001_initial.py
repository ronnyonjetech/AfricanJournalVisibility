# Generated by Django 5.0 on 2024-12-12 07:21

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the newsletter title', max_length=255)),
                ('content', models.TextField(help_text='Enter the newsletter content')),
                ('published_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Publication date and time')),
                ('is_published', models.BooleanField(default=False, help_text='Mark if the newsletter is published')),
            ],
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text="Subscriber's email address", max_length=254, unique=True)),
                ('subscribed_date', models.DateTimeField(auto_now_add=True, help_text='Date when the subscription was created')),
                ('is_active', models.BooleanField(default=True, help_text='Is the subscription active')),
            ],
        ),
        migrations.CreateModel(
            name='NewsletterSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscribed_date', models.DateTimeField(auto_now_add=True, help_text='Date of newsletter subscription')),
                ('newsletter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='news.newsletter')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='news.subscriber')),
            ],
            options={
                'unique_together': {('newsletter', 'subscriber')},
            },
        ),
    ]
